# the name of the role.
name: single

# description of the role.
description: Build machine

# name of the user for EC2 SSH login.
user: ec2-user

# AWS information for AWS instances in this role.
# can be overridden in the role.create_instance() call.
aws:
  ami_id: ami-1624987f  # Amazon Linux AMI
  key_name: main
  security_groups: [dojo_web]
  instance_type: t1.micro

# describes how to provision instances in this role.
provision:
  # tools to install on the instance.
  tools: [__update_packages__, reboot,
          easy_install, python2.7, pip, virtualenv,
          git, gcc, make, python27-devel, mysql, mysql-devel,
          supervisord, nginx, redis, reboot]

  # git repos.
  git:
    # if True, installs a private key on the instance that will be used for git commands.
    # the private-key file must be specified in the context yaml (under keys/git).
    install_key_file: True

    # which repos to clone: __all__, a repo name, or list of repo names.
    clone: __all__

# describes how to execute a build for instances in this role.
# this section includes either "plan" or "copy_from", but not both.
build:
  plan:
    # repos to "git pull".
    repos: [dojo_prod]

    # reference repo whose commit ID is used in the build name.
    # if not specified the first repo in "repos" is the reference.
    reference_repo: dojo_prod

    # python interpreter to use in the build virtualenv.
    # if not specified, uses the default python interpreter.
    interpreter: python2.7

    # how to run build unittests.
    unittest: cmd

    # if True, creates a tarball of a successful build.
    # must be True if any other roles expect to "copy_from" this instance.
    tarball: True

# describes how to activate/deploy a build.
activate:
  # the name of what's being activated. arbitrary, really. just used to differentiate between
  # things that are activated.
  name: web

  # if specified, fabcloudkit will make a HTTP HEAD request to the gunicorn server with this path,
  # e.g., to http://127.0.0.1:<port>/<http_test_path. if a 200, 300, or 400 response is received then
  # activation proceeds. if not specified, activation will proceed as soon as the process is running.
  http_test_path: /fitness

  gunicorn:
    # the gunicorn command to execute; defaults to "gunicorn".
    script: gunicorn

    # specifies the gunicorn module:variable to run.
    app_module: app:app

    # gunicorn "long-name" options. these are the same as the option names preceded with double-dash,
    # i.e., use "name" and not "n". "bind" cannot be set because it's set automatically.
    # "name" and "workers" have intelligent defaults, but can be overridden here.
    options:
      debug: True
      log-level: DEBUG

  # Nginx-specific configuration.
  nginx:
    # where Nginx should listen for connections; if not specified defaults to 80.
    listen: 80

    # domain in which Nginx listens; if not specified defaults to "".
    #server_names: None

    static:
      - url: /static/
        local: app/static/
